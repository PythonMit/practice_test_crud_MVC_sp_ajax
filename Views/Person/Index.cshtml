@model IEnumerable<PersonModel>
@{
    ViewData["Title"] = "Person List";
}

<button id="btnAdd" class="btn btn-primary" onclick="openAddEditModal()">Add Person</button>

<table class="table table-striped">
    <thead>
        <tr>
            <th>Name</th>
            <th>Email</th>
            <th>Phone</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var person in Model)
        {
            <tr>
                <td>@person.Name</td>
                <td>@person.Email</td>
                <td>@person.PhoneNo</td>
                <td>
                    <button class="btn btn-warning" onclick="openEditModal(@person.Id)">Edit</button>
                    <button class="btn btn-danger" onclick="deletePerson(@person.Id)">Delete</button>
                </td>
            </tr>
        }
    </tbody>
</table>

<div id="personModal" class="modal fade" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Person Details</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="modalClosed()">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <form id="personForm">
                <div class="modal-body">
                    <input type="hidden" id="Id" name="Id"  />
                    <div class="form-group">
                        <label>Name</label>
                        <input  type="text" id="Name" name="Name" class="form-control" required="required"  />
                       
                    </div>
                    <div class="form-group">
                        <label>Email</label>
                        <input type="email" id="Email" name="Email" class="form-control" required />
                       
                    </div>
                    <div class="form-group">
                        <label>Phone</label>
                        <input type="text" id="PhoneNo" name="PhoneNo" class="form-control" required />
                    </div>
                    <div class="form-group">
                        <label>Address</label>
                        <input type="text" id="Address" name="Address" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label>State</label>
                        <select id="State" name="State" class="form-control" required onchange="loadCities()">
                            <option value="Gujarat">Gujarat</option>
                            <option value="Maharashtra">Maharashtra</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label>City</label>
                        <select id="City" name="City" class="form-control" required>
                            <!-- Cities will be loaded here -->
                        </select>
                    </div>
                    <div class="form-check">
                        <input type="checkbox" class="form-check-input" id="Agree" onclick="toggleSubmitButton()">
                        <label class="form-check-label" for="Agree">Agree?</label>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" id="btnSubmit" class="btn btn-primary" disabled onclick="savePerson()">Submit</button>
                    <button type="button" class="btn btn-secondary" data-dismiss="modal" onclick="modalClosed()">Cancel</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function openAddEditModal() {
            resetForm();
            $('#personModal').modal('show');
        }
        function modalClosed() {
            debugger
            resetForm();
            $('#personModal').modal('hide');
        }
        function openEditModal(id) {
            $.ajax({
                url: '/Person/GetPersonById',
                type: 'GET',
                data: { id: id },
                success: function (data) {
                    $('#Id').val(data.id);
                    $('#Name').val(data.name);
                    $('#Email').val(data.email);
                    $('#PhoneNo').val(data.phoneNo);
                    $('#Address').val(data.address);
                    $('#State').val(data.state);
                    loadCities(data.city);
                    $('#personModal').modal('show');
                }
            });
        }

        function deletePerson(id) {
            if (confirm('Are you sure you want to delete this person?')) {
                $.ajax({
                    url: '/Person/Delete',
                    type: 'POST',
                    data: { id: id },
                    success: function () {
                        location.reload(); // Reload the page after deletion
                    }
                });
            }
        }

        function savePerson() {
            var formData = $('#personForm').serialize(); // Serialize the form data

            $.ajax({
                url: '/Person/AddOrEditPerson',
                type: 'POST',
                data: formData,
                success: function () {
                    $('#personModal').modal('hide'); // Hide the modal on success
                    location.reload(); // Reload the page after saving
                }
            });
        }

        function loadCities(selectedCity = null) {
            var cities = [];
            var state = $('#State').val();
            if (state === 'Gujarat') {
                cities = ['Surat', 'Bardoli', 'Baroda'];
            } else if (state === 'Maharashtra') {
                cities = ['Mumbai', 'Pune'];
            }

            $('#City').empty();
            $.each(cities, function (index, city) {
                $('#City').append($('<option>', {
                    value: city,
                    text: city,
                    selected: city === selectedCity
                }));
            });
        }

        function toggleSubmitButton() {
            $('#btnSubmit').prop('disabled', !$('#Agree').prop('checked'));
        }

        function resetForm() {
            $('#personForm')[0].reset();
            $('#Id').val(0);
            loadCities();
            toggleSubmitButton();
        }
     
    </script>

}